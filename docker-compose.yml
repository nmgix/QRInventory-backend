# services:
#   qr-inventory-api:
#     container_name: qr-inventory-api
#     build:
#       dockerfile: Dockerfile
#       context: .
#     env_file:
#       - .env
#     networks:
#       - qr-inventory-proxy
#       - api

#   nginx:
#     container_name: reverse-proxy
#     image: nginx
#     build:
#       context: .
#       dockerfile: ./nginx.Dockerfile
#     env_file:
#       - .env
#     ports:
#       - 8000:80
#     command: >
#       /bin/sh -c "envsubst < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

#     depends_on:
#       - qr-inventory-api
#     networks:
#       - qr-inventory-proxy
#       - api
# volumes:
#   docker-nest-invetorying:
# networks:
#   api:
#     name: api
#     driver: bridge
#   qr-inventory-proxy:
#     name: qr-inventory

services:
  qr-inventory-api-1:
    container_name: qr-inventory-api-1
    build:
      dockerfile: Dockerfile
      context: .
      target: build
    env_file:
      - .env
    environment:
      APP_PORT: 5001
      NODE_ENV: developmentdocker
    command: npm run start:prod
    networks:
      - qr-inventory-proxy
      - api

  nginx:
    container_name: reverse-proxy
    image: nginx
    build:
      context: .
      dockerfile: ./nginx.Dockerfile
    env_file:
      - .env
    ports:
      - 8000:80
    depends_on:
      - qr-inventory-api-1
    networks:
      - qr-inventory-proxy
      - api

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - ${PGADMIN_PORT}:80
    # volumes:
    #   - pgadmin:/var/lib/pgadmin
    networks:
      - api

volumes:
  docker-nest-invetorying:
networks:
  api:
    name: api
    driver: bridge
  qr-inventory-proxy:
    name: qr-inventory
