services:
  qr-inventory-api-1:
    restart: unless-stopped
    build:
      target: development
    environment:
      NODE_ENV: developmentdocker
    command: npm run start:docker
    ports:
      - "5000:5001"
    depends_on:
      - postgres_test

  postgres_test:
    image: postgres
    restart: always
    container_name: ${POSTGRES_TEST_HOST:?}
    command: postgres -c port=${POSTGRES_TEST_PORT:?} -c listen_addresses='*'
    ports:
      - "${POSTGRES_TEST_PORT}:${POSTGRES_TEST_PORT}"
    volumes:
      - docker-qr-invetorying-pg-test:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_TEST_DB:?}
      POSTGRES_USER: ${POSTGRES_TEST_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_TEST_PASSWORD:?}
    networks:
      - api

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:?}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:?}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - ${PGADMIN_PORT:?}:80
    networks:
      - api
    depends_on:
      - postgres_test

  nginx:
    ports:
      - 8000:80
    build:
      args:
        NODE_ENV: development
    command: >
      /bin/sh -c "envsubst < /etc/nginx/nginx.conf.development.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"


volumes:
  docker-qr-invetorying-pg-test:
